{"version":3,"sources":["useCanvas.js","ImageDataViewer.js","ColorPicker.js","DrawCanvas.js","App.js","index.js"],"names":["cv","window","analyzeImage","canvas","callback","liveCanvasRef","drawCanvasRef","threshold","morph","dilate","erode","doComponents","setLoading","console","log","ctx","getContext","drawctx","current","imageData","getImageData","width","height","src","matFromImageData","cols","rows","size","depth","channels","type","Mat","cvtColor","COLOR_RGBA2GRAY","THRESH_BINARY","THRESH_OTSU","GaussianBlur","Size","adaptiveThreshold","ADAPTIVE_THRESH_GAUSSIAN_C","THRESH_BINARY_INV","morphologyEx","MORPH_OPEN","getStructuringElement","MORPH_ELLIPSE","bitwise_not","drawData","px","i","j","base","r","data","g","b","ucharPtr","labelMap","Map","labels","stats","centroids","x","connectedComponentsWithStats","CV_32S","area","intAt","CC_STAT_AREA","set","randomColor","format","COLOR_GRAY2RGB","y","label","has","color","get","imshow","components","useCanvas","imageX","setImageData","lastChange","debounceAnalyzeImage","useCallback","debounce","canvasRef","useRef","useEffect","reader","FileReader","addEventListener","arg","image","Image","onload","drawCanvas","context","clearRect","drawImage","target","result","readAsDataURL","ImageDataViewer","isLoading","className","Object","entries","map","a","ColorPicker","Type","value","name","onChange","multiple","round","c","e","hsl","DrawCanvas","mode","setLastChange","xref","lineWidth","useState","pos","setPos","mouseDown","clientX","clientY","mouseMove","buttons","rect","getBoundingClientRect","scaleX","scaleY","thisPos","left","top","lastPos","beginPath","lineCap","globalCompositeOperation","strokeStyle","moveTo","lineTo","stroke","Date","getTime","onMouseDown","onMouseMove","ref","App","setImage","setMode","setDoComponents","viewMode","setViewMode","h","s","l","setLineWidth","setThreshold","setMorph","setDilate","setErode","thresholdValue","Math","morphValue","ceil","dilateValue","erodeValue","dragVisible","setDragVisible","allowDrag","dataTransfer","dropEffect","preventDefault","onDragEnter","onClick","AlphaPicker","checked","style","pointerEvents","display","id","onDragOver","onDragLeave","onDrop","files","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd37e501.chunk.js","sourcesContent":["import { useRef, useEffect, useCallback } from \"react\";\nimport round from \"round\";\nimport debounce from \"lodash.debounce\";\nimport chunk from \"lodash.chunk\";\nimport randomColor from \"randomcolor\";\n\nconst cv = window.cv;\n\nconst rgbToHsl = (r, g, b) => {\n  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    l = (max + min) / 2;\n\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h * 360, s, l];\n};\n\nconst isIncluded = ([h, s, l], { minH, maxH, minL, maxL, minS }) => {\n  if (minH < maxH && (h < minH || h > maxH)) return false;\n  if (minH > maxH && h > maxH && h < minH) return false;\n  if (s < minS) return false;\n  if (l < minL) return false;\n  if (l > maxL) return false;\n  return true;\n};\n\nconst analyzeImage = (\n  canvas,\n  callback,\n  liveCanvasRef,\n  drawCanvasRef,\n  threshold,\n  morph,\n  dilate,\n  erode,\n  doComponents,\n  setLoading\n) => {\n  console.log(\"analyze\");\n  const ctx = canvas.getContext(\"2d\");\n  const drawctx = drawCanvasRef.current.getContext(\"2d\");\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  const src = cv.matFromImageData(imageData);\n  \n  console.log('image width: ' + src.cols + '\\n' +\n            'image height: ' + src.rows + '\\n' +\n            'image size: ' + src.size().width + '*' + src.size().height + '\\n' +\n            'image depth: ' + src.depth() + '\\n' +\n            'image channels ' + src.channels() + '\\n' +\n            'image type: ' + src.type() + '\\n');\n\n  const bwimg = new cv.Mat();\n  cv.cvtColor(src,src, cv.COLOR_RGBA2GRAY,0);\n\n  if (threshold === \"OTSU\")\n    cv.threshold(src, src, 128, 255, cv.THRESH_BINARY+cv.THRESH_OTSU);\n  else if (threshold === \"ADAPTIVE\"){\n    cv.GaussianBlur(src,src,new cv.Size(7,7),0);\n    cv.adaptiveThreshold(src, src, 255, cv.ADAPTIVE_THRESH_GAUSSIAN_C, cv.THRESH_BINARY_INV, 7, 2);\n  }\n  else\n    cv.threshold(src, src, threshold, 255, cv.THRESH_BINARY);\n  cv.morphologyEx(src, src, cv.MORPH_OPEN, cv.getStructuringElement(cv.MORPH_ELLIPSE,new cv.Size(morph,morph)));\n  cv.bitwise_not(src,src);\n  cv.morphologyEx(src, src, cv.MORPH_OPEN, cv.getStructuringElement(cv.MORPH_ELLIPSE,new cv.Size(erode,erode)));\n  cv.bitwise_not(src,src);\n  cv.dilate(src,src,cv.getStructuringElement(cv.MORPH_ELLIPSE,new cv.Size(dilate,dilate)));\n  cv.bitwise_not(src,src);\n\n\n\n  const drawData = drawctx.getImageData(0, 0, canvas.width, canvas.height);\n  const pixels = drawData.width * drawData.height;\n  let px = 0;\n  for (let i = 0; i < drawData.height; i++) {\n    for (let j = 0; j < drawData.width; j++) {\n    const base = px * 4;\n    const r = drawData.data[base];\n    const g = drawData.data[base + 1];\n    const b = drawData.data[base + 2];\n    const a = drawData.data[base + 3] / 255;\n\n    px++;\n\n    if (a < 0.1) continue;\n\n\n    src.ucharPtr(i, j)[0] = r;\n    src.ucharPtr(i, j)[1] = g;\n    src.ucharPtr(i, j)[2] = b;\n    src.ucharPtr(i, j)[3] = 255; \n  }\n}\nconst labelMap = new Map();\n  if (doComponents){\n    const labels = new cv.Mat ();\n    const stats = new cv.Mat();\n    const centroids = new cv.Mat ();\n    \n    \n    const x = cv.connectedComponentsWithStats(src, labels, stats, centroids, 4, cv.CV_32S);\n    \n\n\n    for (let i = 1; i < x; i++){\n      const area = stats.intAt(i,cv.CC_STAT_AREA);\n      \n      if (area > 10000){\n        labelMap.set(i,randomColor({format: \"rgbArray\"}));\n        console.log(area);\n      }\n    }\n    console.log(labelMap);\n    cv.cvtColor(src,src, cv.COLOR_GRAY2RGB,0);\n    for (let y = 0; y < src.rows; y++){\n      for (let x = 0; x < src.cols; x++)\n      {\n        const label = labels.intAt(y, x);\n        if (!labelMap.has(label))\n          continue;\n        const color = labelMap.get(label);\n        //console.log(label);\n        src.ucharPtr(y, x)[0] = color[0];\n        src.ucharPtr(y, x)[1] = color[1];\n        src.ucharPtr(y, x)[2] = color[2]; \n      } \n    }\n  }\n  cv.imshow(\"liveCanvas\",src);\n  \n  setLoading(false);\n  callback({\n    components: labelMap.size\n  });\n};\n\nconst useCanvas = (\n  imageX,\n  setImageData,\n  liveCanvasRef,\n  drawCanvasRef,\n  threshold,\n  morph,\n  dilate,\n  erode,\n  doComponents,\n  lastChange,\n  setLoading\n) => {\n  const debounceAnalyzeImage = useCallback(debounce(analyzeImage, 500), []);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    console.log(\"effect\");\n    if (!imageX) return false;\n    setLoading(true);\n    const reader = new FileReader();\n\n    reader.addEventListener(\"loadend\", (arg) => {\n      console.log(\"loadend\", arg);\n      const image = new Image();\n      image.onload = () => {\n        if (!image) return false;\n        const canvas = canvasRef.current;\n        const drawCanvas = drawCanvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        canvas.height = image.height;\n        canvas.width = image.width;\n        drawCanvas.height = image.height;\n        drawCanvas.width = image.width;\n        drawCanvas.getContext(\"2d\").clearRect(0, 0, image.width, image.height);\n        context.clearRect(0, 0, image.width, image.height);\n        console.log(canvas);\n        context.drawImage(image, 0, 0);\n        debounceAnalyzeImage(\n          canvas,\n          setImageData,\n          liveCanvasRef,\n          drawCanvasRef,\n          threshold,\n          morph,\n          dilate,\n          erode,\n          doComponents,\n          setLoading\n        );\n      };\n      image.src = arg.target.result;\n    });\n\n    reader.readAsDataURL(imageX);\n  }, [imageX, setImageData, liveCanvasRef]);\n\n  useEffect(() => {\n    if (!imageX) return false;\n    setLoading(true);\n    const canvas = canvasRef.current;\n    debounceAnalyzeImage(\n      canvas,\n      setImageData,\n      liveCanvasRef,\n      drawCanvasRef,\n      threshold,\n      morph,\n      dilate,\n      erode,\n      doComponents,\n      setLoading\n    );\n  }, [\n    setImageData,\n    liveCanvasRef,\n    threshold,\n    morph,\n    dilate,\n    erode,\n    doComponents,\n    lastChange,\n    setLoading,\n  ]);\n\n  return canvasRef;\n};\n\nexport default useCanvas;\n","import React from \"react\";\nimport {FaHourglassHalf} from \"react-icons/fa\";\n\nconst ImageDataViewer = ({ data, isLoading }) => {\n\treturn (\n\t\t<div className={\"imageDataViewer\"+(isLoading ? \" loading\": \"\")}>\n\t\t\t{isLoading ? <FaHourglassHalf /> : Object.entries(data).map(([a, b]) => (\n\t\t\t\t<div key={a} className=\"imageData\"><div className=\"key\">{a}:</div><div className=\"value\">{b}</div></div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default ImageDataViewer;\n","import React from \"react\";\nimport round from \"round\";\n\nconst ColorPicker = ({Type, color, value, name, onChange, multiple}) => <div className=\"colorPicker\">\n<div className=\"labelWrapper\"><div className=\"label\">{name}</div><div className=\"value\">{typeof(value) === \"string\" ? value : round(value,multiple)}</div></div>\n<Type color={color} onChange={(c, e) => onChange(c.hsl)} />\n</div>;\n\nexport default ColorPicker;","import React, { useState, useCallback } from \"react\";\n\nconst DrawCanvas = ({ mode, setLastChange, xref, lineWidth }) => {\n\tconst [pos, setPos] = useState(null);\n\n\tconst canvas = xref.current;\n\n\tconst mouseDown = useCallback(\n\t\t(e) => {\n\t\t\tsetPos({ x: e.clientX, y: e.clientY });\n\t\t},\n\t\t[setPos]\n\t);\n\n\tconst mouseMove = useCallback(\n\t\t(e) => {\n\t\t\tif (e.buttons !== 1) return;\n\t\t\tif (!pos) return;\n\t\t\tconst ctx = canvas.getContext(\"2d\");\n\t\t\tconst rect = canvas.getBoundingClientRect(); // abs. size of element\n\t\t\tconst scaleX = canvas.width / rect.width; // relationship bitmap vs. element for X\n\t\t\tconst scaleY = canvas.height / rect.height; // relationship bitmap vs. element for Y\n\t\t\tconst thisPos = {\n\t\t\t\tx: (e.clientX - rect.left) * scaleX, // scale mouse coordinates after they have\n\t\t\t\ty: (e.clientY - rect.top) * scaleY, // been adjusted to be relative to element\n\t\t\t};\n\t\t\tconst lastPos = {\n\t\t\t\tx: (pos.x - rect.left) * scaleX, // scale mouse coordinates after they have\n\t\t\t\ty: (pos.y - rect.top) * scaleY, // been adjusted to be relative to element\n\t\t\t};\n\t\t\tctx.beginPath(); // begin\n\n\t\t\tctx.lineWidth = lineWidth;\n\t\t\tctx.lineCap = \"round\";\n\n\t\t\tif(mode === \"PAINT\") {\n            ctx.globalCompositeOperation = 'source-over';\n            ctx.strokeStyle = 'black';\n            \n        } else {\n            ctx.globalCompositeOperation = 'source-over';\n            ctx.strokeStyle = 'white';\n            \n        }\n\n\t\t\tctx.moveTo(lastPos.x, lastPos.y); // from\n\t\t\tctx.lineTo(thisPos.x, thisPos.y); // to\n\n\t\t\tctx.stroke(); // draw it!\n\t\t\tsetPos({ x: e.clientX, y: e.clientY });\n\t\t\tsetLastChange((new Date()).getTime());\n\t\t},\n\t\t[pos, canvas, lineWidth, setLastChange, mode]\n\t);\n\n\treturn (\n\t\t<canvas\n\t\t\tonMouseDown={mouseDown}\n\t\t\tonMouseMove={mouseMove}\n\t\t\tclassName=\"overlay canvas\"\n\t\t\tref={xref}\n\t\t/>\n\t);\n};\n\nexport default DrawCanvas;\n","import React, { useState, useRef } from \"react\";\nimport useCanvas from \"./useCanvas\";\nimport ImageDataViewer from \"./ImageDataViewer\";\nimport { HuePicker, AlphaPicker } from \"react-color\";\nimport ColorPicker from \"./ColorPicker\";\nimport round from \"round\";\nimport DrawCanvas from \"./DrawCanvas\";\nimport { FaImage, FaEye, FaPaintBrush, FaEraser } from \"react-icons/fa\";\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [mode, setMode] = useState(\"PAINT\");\n  const [isLoading, setLoading] = useState(false);\n  const [doComponents, setDoComponents] = useState(false);\n  const [viewMode, setViewMode] = useState(\"NONE\");\n\n  const [lineWidth, setLineWidth] = useState({\n    h: 0,\n    s: 0,\n    l: 0,\n    a: 0.1,\n  });\n\n\n  const [threshold, setThreshold] = useState({\n    h: 0,\n    s: 0,\n    l: 0,\n    a: 1,\n  });\n\n  const [morph, setMorph] = useState({\n    h: 0,\n    s: 0,\n    l: 0,\n    a: 0.1,\n  });\n\n  const [dilate, setDilate] = useState({\n    h: 0,\n    s: 0,\n    l: 0,\n    a: 0.2,\n  });\n\n  const [erode, setErode] = useState({\n    h: 0,\n    s: 0,\n    l: 0,\n    a: 0.2,\n  });\n  \n\n  const [imageData, setImageData] = useState({});\n\n  const liveCanvasRef = useRef(null);\n  const drawCanvasRef = useRef(null);\n\n  const [lastChange, setLastChange] = useState(0);\n\n  let thresholdValue = Math.round(threshold.a * 255);\n  if (thresholdValue === 255)\n    thresholdValue = \"OTSU\";\n  if (thresholdValue === 0)\n    thresholdValue = \"ADAPTIVE\";\n  const morphValue = Math.ceil(morph.a * 30) | 1;\n  const dilateValue = Math.ceil(dilate.a * 30) | 1;\n  const erodeValue = Math.ceil(erode.a * 30) | 1;\n\n  const canvasRef = useCanvas(\n    image,\n    setImageData,\n    liveCanvasRef,\n    drawCanvasRef,\n    thresholdValue,\n    morphValue,\n    dilateValue,\n    erodeValue,\n    doComponents,\n    lastChange,\n    setLoading\n  );\n\n  const [dragVisible, setDragVisible] = useState(false);\n\n  const allowDrag = (e) => {\n    e.dataTransfer.dropEffect = \"copy\";\n    e.preventDefault();\n  };\n\n  const drop = (e) => {\n    e.preventDefault();\n    setDragVisible(false);\n    setImage(e.dataTransfer.files[0]);\n    //drop\n  };\n\n  return (\n    <div className=\"root\" onDragEnter={() => setDragVisible(true)}>\n      <div className=\"topPart\">\n        <div className=\"xWrapper\">\n          <div\n            onClick={() => setViewMode(\"NONE\")}\n            className={\"xPart\" + (viewMode === \"NONE\" ? \" selected\" : \"\")}\n          >\n            <FaImage />\n          </div>\n          <div\n            onClick={() => setViewMode(\"INSPECT\")}\n            className={\"xPart\" + (viewMode === \"INSPECT\" ? \" selected\" : \"\")}\n          >\n            <FaEye />\n          </div>\n          <div\n            onClick={() => setMode(\"PAINT\")}\n            className={\"xPart\" + (mode === \"PAINT\" ? \" selected\" : \"\")}\n          >\n            <FaPaintBrush />\n          </div>\n          <div\n            onClick={() => setMode(\"ERASE\")}\n            className={\"xPart\" + (mode === \"ERASE\" ? \" selected\" : \"\")}\n          >\n            <FaEraser />\n          </div>\n        </div>\n        <div className=\"settingsWrapper\">\n          <ColorPicker\n            Type={AlphaPicker}\n            color={lineWidth}\n            multiple={1}\n            value={lineWidth.a * 100}\n            name=\"Line width\"\n            onChange={setLineWidth}\n          />\n          <ColorPicker\n            Type={AlphaPicker}\n            color={threshold}\n            multiple={0.01}\n            value={thresholdValue}\n            name=\"Threshold\"\n            onChange={setThreshold}\n          />\n          <ColorPicker\n            Type={AlphaPicker}\n            color={morph}\n            multiple={0.01}\n            value={morphValue}\n            name=\"Morph\"\n            onChange={setMorph}\n          />\n          <ColorPicker\n            Type={AlphaPicker}\n            color={erode}\n            multiple={0.01}\n            value={erodeValue}\n            name=\"inv Morph\"\n            onChange={setErode}\n          />\n          <ColorPicker\n            Type={AlphaPicker}\n            color={dilate}\n            multiple={0.01}\n            value={dilateValue}\n            name=\"Dilate\"\n            onChange={setDilate}\n          />\n          <label>\n          Calculate Components:\n          <input\n            name=\"isGoing\"\n            type=\"checkbox\"\n            checked={doComponents}\n            onChange={({target}) => setDoComponents(target.checked)} />\n          </label>\n          \n        </div>\n        <ImageDataViewer isLoading={isLoading} data={imageData} />\n      </div>\n      <div className=\"canvasWrapper\">\n        <div className=\"canvas placeholder\">\n          <div className=\"placeholderText\">Drag image here</div>\n        </div>\n        <canvas className=\"canvas\" ref={canvasRef} />\n        <canvas\n          style={{\n            pointerEvents: \"none\",\n            display: viewMode === \"INSPECT\" ? \"block\" : \"none\",\n          }}\n          id=\"liveCanvas\"\n          className=\"overlay canvas\"\n          ref={liveCanvasRef}\n        />\n        <DrawCanvas\n          mode={mode}\n          lineWidth={round(lineWidth.a * 100)}\n          setLastChange={setLastChange}\n          xref={drawCanvasRef}\n        />\n      </div>\n      <div\n        style={{ display: dragVisible ? \"block\" : \"none\" }}\n        className=\"dropZone\"\n        onDragEnter={allowDrag}\n        onDragOver={allowDrag}\n        onDragLeave={() => setDragVisible(false)}\n        onDrop={drop}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}